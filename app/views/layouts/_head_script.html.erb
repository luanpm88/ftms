<script>
	
	function calculateTransferHourFrom() {
		$('.hour_input_group').each(function() {
			var box = $(this)
			var total = parseFloat(box.find(".budget_hour").attr("value").replace(/,/g,""))
			var input = 0
			
			if (box.find(".input_budget_hour").val() != "") {
			  var vv = parseFloat(box.find(".input_budget_hour").val().replace(/,/g,""))    
			  if (vv > total) {
						  vv = total
						  box.find(".input_budget_hour").val(ReplaceNumberWithDots(total.toFixed(0)))
				  }
			  
			  var remain = total - vv
			  box.find(".budget_hour").html(ReplaceNumberWithDots(remain.toFixed(0)))
			}
		})
	}
	
	function calculateTransferPayForm() {
		var total = parseFloat($(".transfer_payment_form .payment-record-total").html().replace(/,/g,""))
		var remain = parseFloat($(".transfer_payment_form .payment-record-remain").attr("rel").replace(/,/g,""))
		var paid = 0
		if($(".transfer_payment_form .payment-record-paid").val() != "") {
			paid = parseFloat($(".transfer_payment_form .payment-record-paid").val().replace(/,/g,""))
		}
		
		$(".transfer_payment_form .payment-record-remain").html(ReplaceNumberWithDots((remain-paid).toFixed(0)))
	}
	
	function transferToTypeCheck() {
		if ($("select[name='transfer[to_type]']").length) {
			var value = $("select[name='transfer[to_type]']").select2("val")
			$(".transfer_type_box").hide()
			$(".transfer_type_box_"+value).show()
		}
			
	}
	
	function calculateBudgetValues() {
		var budget_money = parseFloat($(".budget_money").html())
		var input_budget_money = 0
		$(".phrase_box .input_budget_money").each(function() {
		  if($(this).val() != "") {
			var vv = parseFloat($(this).val().replace(/,/g,""))
			
			if (vv > budget_money) {
				vv = budget_money
				$(this).val(ReplaceNumberWithDots(budget_money.toFixed(0)))
			}
			
			input_budget_money += vv
		  }
		})
		var remain = budget_money - input_budget_money
		$(".item_budget_money").html(ReplaceNumberWithDots(remain.toFixed(0)))
		
		
		
		$(".phrase_box .input_budget_hour").each(function() {
			var id = $(this).attr("rel")
			var input_budget_hour = 0
			if($(this).val() != "") {
			  input_budget_hour = parseFloat($(this).val().replace(/,/g,""))
			}
			var remain = 0 - input_budget_hour
			$(".item_budget_hour_"+id).html(ReplaceNumberWithDots(remain.toFixed(0)))
		  })
		  $(".budget_hour").each(function() {
			var id = $(this).attr("rel")
			
			var budget_hour = parseFloat($(".budget_hour_"+id).html())
			var input_budget_hour = 0
			$(".phrase_box .input_budget_hour_"+id).each(function() {
			  if($(this).val() != "") {
				var vv = parseFloat($(this).val().replace(/,/g,""))
				
				if (vv > budget_hour) {
					vv = budget_hour
					$(this).val(ReplaceNumberWithDots(budget_hour.toFixed(0)))
				}
				
				input_budget_hour += vv
			  }
			})
			var remain = budget_hour - input_budget_hour
			$(".item_budget_hour_"+id).html(ReplaceNumberWithDots(remain.toFixed(0)))
		  })
		
		
		
	}
	
	function updatePhraseListBoxHour() {
			$(".from_phrase_list_box_hour_money").each(function() {
				var box = $(this)
				if (box.find(".courses_phrase_item").length) {					
					var total = 0
					var money = 0.0
					var per_hour = parseFloat(box.find(".total_phrase_money").attr("per_hour").replace(/,/g,""))
					box.find(".courses_phrase_item").each(function() {
						if ($(this).prop('checked')) {
							total += parseInt($(this).attr("hour"))
							//money += parseInt($(this).attr("money"))
						}
					})
					box.find(".total_phrase_hour").html(total)
					box.find(".total_phrase_money").html(ReplaceNumberWithDots((per_hour*total).toFixed(0)))				
				}
			})
			
			var hour = ""
			var money = ""
			
			if ($(".transfer_course_box .total_phrase_hour").length && $(".transfer_course_box .total_phrase_hour").html() != "N/A") {
				hour = parseFloat($(".transfer_course_box .total_phrase_hour").html().replace(/,/g,""))
			}
			
			if (hour == "") {
				$(".to_phrase_list_box_hour_money").each(function() {
				var box = $(this)
				if (box.find(".courses_phrase_item").length) {					
						var h = 0
						var m = 0.0
						box.find(".courses_phrase_item").each(function() {
							if ($(this).prop('checked')) {
								h += parseInt($(this).attr("hour"))
								m += parseInt($(this).attr("money"))
							}
						})		
					}
					hour = h
				})
			}
			
			if ($(".transfer_course_box .total_phrase_money").length && $(".transfer_course_box .total_phrase_money").html() != "N/A") {
				money = parseFloat($(".transfer_course_box .total_phrase_money").html().replace(/,/g,""))
				money = ReplaceNumberWithDots(money.toFixed(0))
			}
			
			$("input[name='transfer[to_course_hour]']").val(hour)
			$("input[name='transfer[to_course_money]']").val(money)
			
			$("input[name='transfer[hour]']").val(hour)
			$("input[name='transfer[money]']").val(money)
	}
	
	function checkTransferToBoxes() {
		var to_course = $("select[name='transfer[to_course_id]']").val()
		var to_hour = $("select[name='transfer[to_hour]']").val()
		var to_money = $("select[name='transfer[to_money]']").val()
	}
	
	function ajaxTransferToBox(course_id) {
		if (course_id == "") {
			$(".transfer_to_box").html("")
			return
		}
		$.ajax({
			url: "<%= transfer_to_box_courses_path %>?id="+course_id,
			success: function(data, textStatus, jqXHR)
			{
				$(".transfer_to_box").html(data)
				$(".transfer_to_box").find(".modern_select").select2()
				format_price($('.transfer_to_box').find('input.price_input'));
				
				transferToTypeCheck()
				updatePhraseListBoxHour()
			}
		})
	}
	
	function ajaxCoursePhrasesList(input) {
		var box = input.parents(".transfer_course_box")
		var course_id = input.select2("val")
		var contact = ""
		var to_contact = ""
		if (course_id == "") {
			box.find(".course_phrases_list").html("")
			return
		}
		if (typeof(input.attr("contact_id")) != 'undefined') {
			contact = "&contact_id="+input.attr("contact_id")
		}
		if ($("input[name='transfer[to_contact_id]']") != "") {
			to_contact = "&to_contact_id="+$("input[name='transfer[to_contact_id]']").val()
		}
		$.ajax({
			url: "<%= course_phrases_list_courses_path %>?id="+course_id+contact+to_contact,
			success: function(data, textStatus, jqXHR)
			{
				box.find(".course_phrases_list").html(data)
				updatePhraseListBoxHour()
			}
		})
		
	}
	
	function calculateCompanyPayment() {
		var paid = 0
		var total = 0
		
		if($('.company_payment_detail_total').val() != "") {
			total = parseFloat($('.company_payment_detail_total').val().replace(/,/g,""))
		}
		
		$('.company_payment_detail_paid').each(function() {
			if($(this).val() != "") {
				paid += parseFloat($(this).val().replace(/,/g,""))
			}
		})
		
		var remain = total - paid
		$(".company_payment_detail_remain").html(ReplaceNumberWithDots(remain.toFixed(0)))
	}
	
	function noPriceCheck(input) {
		alert(input.select2("val"))
		var box = input.parents(".item_box")
		if (input.select2("val") == "no_price") {
			box.find(".no_price_group").hide()
		} else {
			box.find(".no_price_group").show()
		}
	}
	
	function getDeliveryCounting() {
		var count = $('input[name="ids[]"]:checked').length
		//if (count > 0) {
			$.ajax({
				type: "POST",
				url: "<%= delivery_counting_books_path %>",
				data: $(".listing_form").serialize(),
				success: function(data, textStatus, jqXHR)
					{
						$(".delivery_counting").html(data)
					}
			})
		//}
	}
	
	function updateImportExportList(stock_type_id, program_id, subject_id) {
		$.ajax({
			url : '<%= import_export_form_list_stock_updates_path %>?stock_type_id='+stock_type_id+'&program_id='+program_id+'&subject_id='+subject_id,
			success:function(data, textStatus, jqXHR)
			{
				$(".import-export-stock-list").html(data)
				$('.import-export-stock-list').find(".modern_select").select2({allowClear: true})
				$('.import-export-stock-list').find('input.number_input').number(true, 0);
			}
		});
	}
	
	function updateStockFormList(stock_type_id, program_id, subject_id) {
		var contact_id = $("input[name='course_register[contact_id]']").val()
		$.ajax({
			url : '<%= stock_form_list_books_path %>?contact_id='+contact_id+'&stock_type_id='+stock_type_id+'&program_id='+program_id+'&subject_id='+subject_id,
			success:function(data, textStatus, jqXHR)
			{
				$(".stock_box_list").html(data)
				$('.stock_box_list').find(".modern_select").select2({allowClear: true})
				
				calculateStockPriceForm()
				
				//ajax select2 for contacts		
				$('.stock_box_list').find('.select2-ajax-discount-programs').select2({
					placeholder: "Search for a discount program",
					minimumInputLength: 1,
					allowClear: true,
					multiple: $('.select2-ajax-discount-programs').hasClass("multiple"),
					ajax: {
					  url: $('.select2-ajax-discount-programs').attr("data"),
					  dataType: 'json',
					  data: function (term, page) { // page is the one-based page number tracked by Select2
						return {
						  q: term, //search term
						};
					  },
					  results: function (data, page) {
						return {results: data};
					  }
					},
					initSelection: function (element, callback) {				      
					  callback({ id: element.val(), text: element.attr('text') });
					}
				});
				
				format_price($('.stock_box_list').find('input.price_input'));
			}
		});
	}
	
	function checkCourseRegisterSponsoredCompany() {
		var val = $("select[name='course_register[payment_type]']").val()
		if (val == "company-sponsored") {
			$(".company_sponsored_group").show()
		} else {
			$(".company_sponsored_group").hide()
		}
	}
	
	function checkCourseUpfront() {
		var val = $("input[name='course[upfront]']:checked").val()
		if (val == "true") {
			$(".intake_group").hide()
		} else {
			$(".intake_group").show()
		}
	}
	
	function calculatePhraseHour() {
		var count = 0
		$(".phrase_hour").each(function () {
			if ($(this).val() != "" && $(this).parents(".phrase_boxx").find("select.main_input").val() != "") {
				count += parseInt($(this).val().replace(/,/g,""))
			}			
		})
		$(".total_phrase_hour").html(count)
	}
	
	function renderPhraseSelect(course_id, program_paper) {		
		$.ajax({
			url : '<%= course_phrases_form_courses_path %>?value='+program_paper+'&course_id='+course_id,
			success:function(data, textStatus, jqXHR)
			{
				$('.course-phrases-select').html(data)
				$('.course-phrases-select').find(".modern_select").select2({allowClear: true})
				$('.course-phrases-select').find('.input-append.date').datepicker({
						autoclose: true,
						todayHighlight: true,
						format: 'dd-M-yyyy'
				});
			}
		});
	}
	
	function updatePaymentRecord() {
		var paid_amount = 0
		var addition_total = 0
		$(".payment_box").each(function() {
			if($(this).find('.detail_paid').length && $(this).find('.detail_paid').val() != "") {
				paid_amount += parseFloat($(this).find('.detail_paid').val().replace(/,/g,""))
			}
			if($(this).find('.detail_total').val() != "") {
				addition_total += parseFloat($(this).find('.detail_total').val().replace(/,/g,""))
			}
		})		
		$(".payment-record-paid").html(ReplaceNumberWithDots(paid_amount.toFixed(0)))
		
		//Total
		var total = parseFloat($('.payment-record-total').attr("rel"))
		var new_total = total + addition_total
		
		// remain
		var receivable = parseFloat($('.payment-record-remain').attr("rel"))
		var remain = receivable + addition_total - paid_amount
		
		$(".payment-record-remain").html(ReplaceNumberWithDots(remain.toFixed(0)))
		$(".payment-record-total").html(ReplaceNumberWithDots(new_total.toFixed(0)))
	}
	
	function updatePaymentRecordDetails(input) {
		var box = input.parents(".payment_box")
		var paid = 0
		var addition_total = 0
		if(box.find('.detail_paid').val() != "") {
			paid = parseFloat(box.find('.detail_paid').val().replace(/,/g,""))
		}
		if(box.find('.detail_total').val() != "") {
			addition_total = parseFloat(box.find('.detail_total').val().replace(/,/g,""))
		}
		var total = parseFloat(box.find('.detail_remain').attr("rel"))
		
		var remain = total + addition_total - paid
		
		box.find('.detail_remain').html(ReplaceNumberWithDots(remain.toFixed(0)))
		updatePaymentRecord()
	}
	
	function updateTransferInfo() {		
		if($('input[name="course_register[transfer]"]').length && $('input[name="course_register[transfer]"]').val() != "") {
			var transfer = parseFloat($('input[name="course_register[transfer]"]').val().replace(/,/g,""))
			var total = parseFloat($('.transfer-total').html().replace(/,/g,""))
			var remain = total - transfer
			$(".transfer-used").html($('input[name="course_register[transfer]"]').val())
			$(".transfer-remain").html(ReplaceNumberWithDots(remain.toFixed(0)))
			
			// Transfer Hour			
			var hour_total = parseFloat($('.transfer-total-hour').html().replace(/,/g,""))
			var hour_transfer = (parseFloat(transfer)/parseFloat(total))*parseFloat(hour_total)
			if (hour_total == 0) {
				hour_transfer = 0
			}
			var hour_remain = hour_total - hour_transfer
			
			$(".transfer-used-hour").html(hour_transfer.toFixed(2))
			$(".transfer-remain-hour").html(hour_remain.toFixed(2))
			$("input[name='course_register[transfer_hour]']").val(hour_transfer)
		}
	}
	
	function updateStockPriceForm(input) {		
		var url = "<%= stock_price_form_books_path %>"
		var book_id = input.select2("val")
		var number = input.attr("box_number")
		var full_url = url+'?id='+book_id+'&number='+number
		var box = $('.form_stock_price_'+number)
		
		if (book_id == "") {
			box.html("")
			return
		}
		
		$.ajax({
			url : full_url,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				box.html(data)
				box.find(".modern_select").select2()
				
				//ajax select2 for contacts		
				box.find('.select2-ajax-discount-programs').select2({
					placeholder: "Search for a discount program",
					minimumInputLength: 1,
					allowClear: true,
					multiple: $('.select2-ajax-discount-programs').hasClass("multiple"),
					ajax: {
					  url: $('.select2-ajax-discount-programs').attr("data"),
					  dataType: 'json',
					  data: function (term, page) { // page is the one-based page number tracked by Select2
						return {
						  q: term, //search term
						};
					  },
					  results: function (data, page) {
						return {results: data};
					  }
					},
					initSelection: function (element, callback) {				      
					  callback({ id: element.val(), text: element.attr('text') });
					}
				});
				
				format_price(box.find('input.price_input'))
				
				calculateStockPriceForm()
			}
		});
	}
	
	function updateVolumnForm(input) {
		
		var url = "<%= volumn_checkboxs_books_path %>"
		var book_id = input.select2("val")
		var number = input.attr("box_number")
		var full_url = url+'?id='+book_id+'&number='+number
		var box = $('.form_volumn_list_'+number)
		
		if (book_id == "") {
			box.html("")
			return
		}
		
		$.ajax({
			url : full_url,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				box.html(data)
			}
		});
	}
	
	function updateBookForm(program, subject, number) {
		if ($(".new_course_register_page").length == 0){
			return
		}
		
		var url = "<%= stock_select_books_path %>"
		var program_id = ""
		var subject_id = ""
		
		if (program && program.val() != "") {
			program_id = program.val()
		}		
		if (subject && subject.val() != "") {
			subject_id = subject.val()
		}
		
		var full_url = url+'?program_id='+program_id+'&subject_id='+subject_id+'&number='+number
		var box = $('.form_stock_list_'+number)
		
		$.ajax({
			url : full_url,
			type: "GET",
			success: function(data, textStatus, jqXHR)
			{
				box.html(data)
				box.find(".modern_select").select2()
			}
		});
	}
	
	function updateTotalRegistration() {
		$(total_registration_price)
	}
	
	function calculateStockPriceForm() {
		var total = 0
		var total_list =  0
		var total_program = 0
		var total_discount = 0
		var count = 0
		$('.stock_box_list .stock_box').each(function() {	
			var number = $(this).attr("rel")
			var box = $(this)
			
			if (box.find("input.stock_check").length && !box.find("input.stock_check:checked").length) {
				box.addClass("not_selected")
			} else {
				box.removeClass("not_selected")
			}
			
			if (box.find("input.stock_check:checked").length && !$(this).hasClass("hidden") && box.find('input[name="contacts_courses['+number+'][course_id]"]').val() != "") {
				if (box.find(".price_stock").select2("val") != "no_price") {
						var line_total = 0
						var quantity = 0
						var price = 0
						var price_discount_program = 0
						var price_discount = 0
						
						if(box.find('input[name="books_contacts['+number+'][quantity]"]').length) {
						  quantity = parseFloat(box.find('input[name="books_contacts['+number+'][quantity]"]').val())
						}				
						if(box.find('select[name="books_contacts['+number+'][price]"]').length) {
						  price = parseFloat(box.find('select[name="books_contacts['+number+'][price]"]').select2("val"))*quantity
						}
						if(box.find('input[name="books_contacts['+number+'][discount]"]').length && box.find('input[name="books_contacts['+number+'][discount]"]').val() != "") {
						  price_discount = parseFloat(box.find('input[name="books_contacts['+number+'][discount]"]').val().replace(/,/g,""))
						}       
						if(box.find('input[name="books_contacts['+number+'][discount_program_id]"]').length && box.find('input[name="books_contacts['+number+'][discount_program_id]"]').val() != "") {
						  var text = box.find('input[name="books_contacts['+number+'][discount_program_id]"]').select2("data").text
						  var dd_v = parseFloat(text.split("[")[1].split("]")[0].split(" ")[0].replace(/,/g,""))
						  var pp_type = text.split("[")[1].split("]")[0].split(" ")[1]
						  price_discount_program = parseFloat(box.find('input[name="books_contacts['+number+'][discount_program_id]"]').select2("data").text.split("[")[1].split("]")[0].replace(/,/g,""))
						  
						  if(pp_type=="%") {
							price_discount_program = (price_discount_program/100)*price
						  }
						}
						
						line_total = price - price_discount - price_discount_program
						
						box.find(".total_stock").html(ReplaceNumberWithDots(line_total.toFixed(0)))
						
						
						total = total + line_total
						total_list = total_list + price
						total_program = total_program + price_discount_program
						total_discount = total_discount + price_discount
				}
				
				count = count + 1
			}
			
		})
		$(".total_stock_price").html(ReplaceNumberWithDots(total.toFixed(0)))
		$(".total_stock_list_price").html(ReplaceNumberWithDots(total_list.toFixed(0)))
		$(".total_stock_discount_program_price").html(ReplaceNumberWithDots(total_program.toFixed(0)))
		$(".total_stock_other_discount_price").html(ReplaceNumberWithDots(total_discount.toFixed(0)))
		$(".total_stock_count").html(count)
		
		updateTotalRegsitrationPrice()
		return total
	}
	
	function updateTotalRegsitrationPrice() {
		
		if ($(".total_course_price").length == 0) {
			return false
		}
		
		var course = parseFloat($(".total_course_price").html().replace(/,/g,""))
		var stock = parseFloat($(".total_stock_price").html().replace(/,/g,""))
		var price_discount_program = 0
		var price_discount = 0
		var price_transfer = 0
		
		if($('input[name="course_register[discount_program_id]"]').length && $('input[name="course_register[discount_program_id]"]').val() != "") {
			var text = $('input[name="course_register[discount_program_id]"]').select2("data").text
			var dd_v = parseFloat(text.split("[")[1].split("]")[0].split(" ")[0].replace(/,/g,""))
			var pp_type = text.split("[")[1].split("]")[0].split(" ")[1]
			price_discount_program = parseFloat($('input[name="course_register[discount_program_id]"]').select2("data").text.split("[")[1].split("]")[0].replace(/,/g,""))
			
			if(pp_type=="%") {
				price_discount_program = (price_discount_program/100)*(course + stock)
			}
		}
		
		if($('input[name="course_register[discount]"]').length && $('input[name="course_register[discount]"]').val() != "") {
			price_discount = parseFloat($('input[name="course_register[discount]"]').val().replace(/,/g,""))
		}
		if($('input[name="course_register[transfer]"]').length && $('input[name="course_register[transfer]"]').val() != "") {
			price_transfer = parseFloat($('input[name="course_register[transfer]"]').val().replace(/,/g,""))
		}
		
		var total = course + stock - price_discount_program - price_discount - price_transfer
		
		$(".total_registration_discount_program").html(ReplaceNumberWithDots(price_discount_program.toFixed(0)))
		$(".total_registration_discount").html(ReplaceNumberWithDots(price_discount.toFixed(0)))		
		$(".total_registration_transfer").html(ReplaceNumberWithDots(price_transfer.toFixed(0)))
		$(".total_registration_price").html(ReplaceNumberWithDots(total.toFixed(0)))
		
		updateTransferInfo()
	}
	
	function calculateCoursePriceForm() {
		var total = 0
		var total_list =  0
		var total_program = 0
		var total_discount = 0
		var count = 0
		calculateBudgetValues()
		$('.phrase_box_list .phrase_box').each(function() {	
			var number = $(this).attr("rel")
			var box = $(this)
			if (!$(this).hasClass("hidden") && box.find('input[name="contacts_courses['+number+'][course_id]"]').val() != "") {
				if (box.find(".price_course").select2("val") != "no_price") {
					var line_total = 0
					var price = 0
					var price_discount_program = 0
					var price_discount = 0
					var hour = 0
					var money = 0
					var additional_money = 0
			
					if(box.find('select[name="contacts_courses['+number+'][price]"]').length) {
					  price = parseFloat(box.find('select[name="contacts_courses['+number+'][price]"]').val())
					}
					
					// Use Hour
					if(box.find('input[name="contacts_courses['+number+'][hour]"]').length && box.find('input[name="contacts_courses['+number+'][hour]"]').val() != "") {
					  hour = parseFloat(box.find('input[name="contacts_courses['+number+'][hour]"]').val().replace(/,/g,""))
					}
					if(box.find('input[name="contacts_courses['+number+'][additional_money]"]').length && box.find('input[name="contacts_courses['+number+'][additional_money]"]').val() != "") {
					  additional_money = parseFloat(box.find('input[name="contacts_courses['+number+'][additional_money]"]').val().replace(/,/g,""))
					}
					if (hour > 0) {
						price = additional_money
					}
					
					
					// Use Money
					if(box.find('input[name="contacts_courses['+number+'][money]"]').length && box.find('input[name="contacts_courses['+number+'][money]"]').val() != "") {
					  money = parseFloat(box.find('input[name="contacts_courses['+number+'][money]"]').val().replace(/,/g,""))
					}
					price = price - money
					
					
					
					//if(box.find('input[name="contacts_courses['+number+'][discount]"]').length && box.find('input[name="contacts_courses['+number+'][discount]"]').val() != "") {
					//  price_discount = parseFloat(box.find('input[name="contacts_courses['+number+'][discount]"]').val().replace(/,/g,""))
					//}       
					//
					// Discount Programs
					box.find(".discount_program_box").each(function() {
						
						if ($(this).find('select.price_discount_program').val() != "") {
							var text = $(this).find('select.price_discount_program').select2("data").text
							var dd_v = parseFloat(text.split("[")[1].split("]")[0].split(" ")[0].replace(/,/g,""))
							var pp_type = text.split("[")[1].split("]")[0].split(" ")[1]
							var d_value = parseFloat(text.split("[")[1].split("]")[0].replace(/,/g,""))
							
							if(pp_type=="%") {
							  d_value = (d_value/100)*price
							}
							
							price_discount_program = price_discount_program + d_value
						}					
					})
					
					//Other Discounts
					box.find(".other_discount_box").each(function() {					
						if ($(this).find('input.price_other_discount').val() != "") {
							var d_value = parseFloat($(this).find('input.price_other_discount').val().replace(/,/g,""))
							
							price_discount = price_discount + d_value
						}					
					})
					
					line_total = price - price_discount - price_discount_program
					total_list = total_list + price
					total_program = total_program + price_discount_program
					total_discount = total_discount + price_discount
					
					box.find(".total_course").html(ReplaceNumberWithDots(line_total.toFixed(0)))
					
					
					total = total + line_total
				
				}	
				
				count = count + 1
			}
			
			
		})
		$(".total_course_price").html(ReplaceNumberWithDots(total.toFixed(0)))
		$(".total_course_list_price").html(ReplaceNumberWithDots(total_list.toFixed(0)))
		$(".total_course_discount_program_price").html(ReplaceNumberWithDots(total_program.toFixed(0)))
		$(".total_course_other_discount_price").html(ReplaceNumberWithDots(total_discount.toFixed(0)))
		$(".total_course_count").html(count)
		updateTotalRegsitrationPrice()
		calculateBudgetValues()
		return total
	}
	
	function updateCoursePriceForm(input) {
		var url = "<%= course_price_select_courses_path %>"
		var course_id = input.val()
		var number = input.attr("box_number")
		var full_url = url+'?id='+course_id+'&number='+number
		var box = $('.registration_course_price_box_'+number)
		
		if (course_id == "") {
			box.html("")
			return
		}
		
		$.ajax({
			url : full_url,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				box.html(data)
				box.find(".modern_select").select2({allowClear: true})
				
				//ajax select2 for contacts		
				box.find('.select2-ajax-discount-programs').select2({
					placeholder: "Search for a discount program",
					minimumInputLength: 1,
					allowClear: true,
					multiple: $('.select2-ajax-discount-programs').hasClass("multiple"),
					ajax: {
					  url: $('.select2-ajax-discount-programs').attr("data"),
					  dataType: 'json',
					  data: function (term, page) { // page is the one-based page number tracked by Select2
						return {
						  q: term, //search term
						};
					  },
					  results: function (data, page) {
						return {results: data};
					  }
					},
					initSelection: function (element, callback) {				      
					  callback({ id: element.val(), text: element.attr('text') });
					}
				});
				
				format_price(box.find('input.price_input'));				
				
				calculateCoursePriceForm()
				
				$("input[name='total_course']").each(function() {
					$(this).rules('add', {
						 total_course: true
					});
				});
			}
		});
	}
	
	function updateCoursePhraseForm(input) {
		var url = "<%= courses_phrases_checkboxs_courses_path %>"
		var course_id = input.val()
		var number = input.attr("box_number")
		var full_url = url+'?id='+course_id+'&number='+number+'&contact_id='+$('input[name="course_register[contact_id]"]').select2("val")
		var box = $('.registration_phrase_box_'+number)
		
		if (course_id == "") {
			box.html("")
			return
		}
		
		$.ajax({
			url : full_url,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				box.html(data)
				updatePhraseListBoxHour()
			}
		});
	}
	
	function toggleLinePrice() {
		$('.line_price').each(function() {
			
		})
	}
	
	function updateProgramsBox() {
		var types = $('input[name="contact[contact_type_ids][]"]:checked').map(function(){
			return $(this).val();
		}).get();

		$('.programs_box').hide()
		
		$('.programs_box').each(function() {
			$(this).select2("val","")
		})
		
		types.forEach(function(a){
		  $('.programs_box_'+a).show()
		});
	}
	
	function changeMailingPreferred(input) {		
		if (input.select2("val") == "company" && $('input[name="contact[referrer_id]"]').select2("val") == "") {
			alert("Must choose company first!")
			input.select2("val", 'ftms');
		}
		
		if (input.select2("val") == "company" || input.select2("val") == "home" || input.select2("val") == "ftms") {
			$('.mailing_address_box').hide()
			$('.mailing_address_box').select2("val", "")
		} else {
			$('.mailing_address_box').show()
		}
	}
	
	function changeComanyTrigger(input) {
		if (input.select2("val") == "") {
			$('select[name="contact[payment_type]"]').select2("val","self-financed")
			if ($('select[name="contact[preferred_mailing]"]').select2("val") == "company") {
				$('select[name="contact[preferred_mailing]"]').select2("val", 'ftms');
			}
		}
	}
	
	function updateSeminarContactsCount() {
		var total = $('.datatable-seminar-students').dataTable().fnSettings().fnRecordsTotal()				
		$('.seminar_students_count').html(total)
	}
	
	function removeContactToSeminar(seminar_id, contact_ids) {		
		$.ajax({
			url : '<%= remove_contacts_seminars_path %>?id='+seminar_id+'&contact_ids='+contact_ids.join(","),
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				$('.datatable-seminar-students').dataTable().fnFilter();
				clearListCheck()
				
			}
		});
	}
	
	function addContactToSeminar(seminar_id, contact_ids) {		
		$.ajax({
			url : '<%= add_contacts_seminars_path %>?id='+seminar_id+'&contact_ids='+contact_ids.join(","),
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				$('.datatable-seminar-students').dataTable().fnFilter();
				clearListCheck()
				$('input[name="contacts"]').select2("val","")
			}
		});
	}
	
	var related_info_input
	function checkRelatedInfo(input) {
		var url = input.attr("rel")
		var value = input.val()
		var box = input.parent().find(".related_info_box")
		var msg = input.parent().find(".related_info_msg")
			
		if(typeof(related_info_input) != "undefined") {
			related_info_input.abort()
		}			
		related_info_input = $.ajax({
			url : url,
			type: "GET",
			data: "value="+value,
			success:function(data, textStatus, jqXHR)
			{
				if(data.trim() != "") {
					box.html(data)
					box.show()
					msg.show()
					input.addClass("has_related_info")
				} else {
					box.hide()
					msg.hide()
					input.removeClass("has_related_info")
				}
			}
		});
	}
	
	function clearListCheck() {
		$('.listing_form table input[type="checkbox"]').attr("checked",false);
		$('.check_all_page').attr("checked",false);
		
		$('.listing_form table tr').removeClass("row_selected")
		
		$('.listing_box_actions .listing_checked_count').html("0")
	}
	
	function allListCheck() {		
		$('.check_all_page').attr("checked",true);
		$('.listing_form table input[type="checkbox"]').attr("checked",true);
		$('.listing_form table tr').addClass("row_selected")
		
		var total = $('.dataTable ').dataTable().fnSettings().fnRecordsTotal()
		
		$('.listing_box_actions .listing_checked_count').html(total)
	}
	
	function updateSubjectsFilterBox() {
		var box = $('.subjects-filter-box')
		var program_val = ""
		if ($('select[name="filter[course_types[]]"]').val() != null) {
			program_val = $('select[name="filter[course_types[]]"]').val().join(",")
		}
		$.ajax({
			url : '<%= ajax_quick_info_contacts_path %>?id='+cid,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				box.html(data);
			}
		});
	}
	
	function ajaxQuickContactInfo(cid,box) {		
		if (typeof(cid) == "undefined" || typeof(box) == "undefined") {
			return
		}
		
		if (cid == "") {
			box.html("")
			return
		}
		$.ajax({
			url : '<%= ajax_quick_info_contacts_path %>?id='+cid,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				box.html(data);
			}
		});
	}
	
	function updateContactTag(c_id, t_id) {
		$.ajax({
			url : '<%= update_tag_contacts_path %>?id='+c_id+'&tag_id='+t_id,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{
				
				$('.contact_tag_box[rel="'+c_id+'"]').html(data);
			}
		});
	}
	
	function checkContactType() {
		if($('input[name="contact[is_individual]"]:checked').val() == "true" || $('select[name="is_individual"]').val() == "true") {
			$(".personal-box").show();
			$(".company-box").hide();
			$("input[name='contact[email]']").addClass("required");
		} else {
			$(".personal-box").hide();
			$(".company-box").show();
			$("input[name='contact[email]']").removeClass("required");
		}
	}
	
	function checkInvoiceRequired() {
		if($('.invoice_required:checked').val() == "true") {
			$(".invoice-info-box").show();
		} else {
			$(".invoice-info-box").hide();
		}
	}
	
	function reloadTab(tid, force) {
		if (typeof(force) == "undefined") {
			force = false
		}
		
		//if ($(".main-frame").length && !force) {
		//	$(".main-frame")[0].contentWindow.reloadDatatable()
		//} else {
			$('iframe#'+tid).attr("src",$('iframe#'+tid).attr("src"))
		//}
		
	}
	function closeTab(tid) {
		//open parent		
		var pname = $("#main-tab li.active a").attr("pname")
		var psrc = $("#main-tab li.active a").attr("psrc")
		
		if (typeof(pname) != 'undefined') {
		  openTab(psrc,pname)
		}
		
		//close current
		var active = $('#main-tab a[rel="'+tid+'"]').parent().hasClass("active")		
        $('#main-tab a[rel="'+tid+'"]').parent().remove()
		$('.tab-content div#'+tid).remove()
		
		if(active) {
			$('#main-tab li:last-child a').tab('show')
			
			if($(".tab-pane.active .main-frame").length > 0) {
				$(".tab-pane.active .main-frame")[0].contentWindow.reloadDatatable()
			} else {
				//reloadTab($('#main-tab li.active a').attr("rel"))
			}
        }
        
        $(document).scrollTop(0);
		
		clearInterval(tabs[tid])
		
		
	}
	var tabs = Array()
	function openTab(tsrc, tname, psrc, pname) {
		if (typeof(tname) == 'undefined' || tname == 'undefined') {
			tname = $('a[href="'+tsrc+'"]').html().trim();
		}
		
		var tid = "tab_"+tname.replace(/\s/g, "_").replace(/[^a-zA-Z0-9\_]/g, "").toLowerCase();
		
		if($('a[rel="'+tid+'"]').length == 0) {
			
			var parent = ""
			if (psrc) {
				parent = ' psrc="'+psrc+'" pname="'+pname+'" '
			}
			
		  $('#main-tab').append('<li class=""><a tsrc="'+tsrc+'" tname="'+tname+'" '+parent+' rel="'+tid+'" href="#'+tid+'">'+tname+'<i class="but but-reload icon-refresh"></i><i class="but but-del icon-remove-sign"></i></a></li>')
		  $('.tab-content').append('<div id="'+tid+'" class="tab-pane"><iframe class="main-frame" id="'+tid+'" seamless="seamless" scrolling="yes" src="'+tsrc+'"></iframe></div>')
			$('#main-tab a').click(function (e) {
				  e.preventDefault();
				  $(this).tab('show');
			});
		  $('#main-tab a[rel="'+tid+'"]').tab('show')
			tabs[tid] = resizeIframe(tid)
		  
			$('#main-tab a[rel="'+tid+'"]').parent().find(".but-del").click(function (e) {
                closeTab(tid)
			});
			$('#main-tab a[rel="'+tid+'"]').parent().find(".but-reload").click(function (e) {
                reloadTab(tid, true)
			});
			
			

			$('iframe#'+tid).load(function(){
				$(document).scrollTop(0);
			});


		} else {
		  $('#main-tab a[rel="'+tid+'"]').tab('show')
		  $('iframe#'+tid).attr("src",tsrc)
		}
		
		
		
		$(document).scrollTop(0);
		if($(window).width() <= 750 && $('.page-sidebar').css("display") == "block") {
			$('#main-menu-toggle').trigger("click");
		}
	}
	
	function resizeIframe(tid) {
		
		var obj = $('iframe#'+tid)
		var lastHeight = 0, curHeight = 0, $frame = obj;
		iid = setInterval(function(){
		  curHeight = $frame.contents().find('body').height();
		  if ( curHeight != lastHeight ) {
			$frame.css('height', ((lastHeight = curHeight)+85) + 'px' );
		  }
		},500);
		
		return iid
    }
	
	function readURL(input, image) {
		if (input.files && input.files[0]) {
			var reader = new FileReader();	
			reader.onload = function (e) {
				image.attr('src', e.target.result);
			}	
			reader.readAsDataURL(input.files[0]);
		}
	}
	
	function updateBoxesOrder() {
		var ord = 1
		$('.image-boxes .image-box').each(function() {
			$(this).find(".display_order").val(ord)
			ord++
		})
	}
	
	function uploaderBoxes() {
		$('.image-boxes .image-box a').click(function(e) {
			e.preventDefault();
			$(this).parent().find("input[type='file']").trigger("click")
		})		
		$('.image-boxes .image-box input[type="file"]').change(function() {
			img = $(this).parents('.image-box').find("img.new_picture")
			icon = $(this).parents('.image-box').find(".current_img")
			del_icon = $(this).parents('.image-box').find(".delete-but")
			readURL(this, img);
			img.removeClass("hidden");
			icon.addClass("hidden");
			del_icon.removeClass("hidden");
			
			$(this).parents('.image-box').find(".destroy_tag").val("")
		});
		$('.image-boxes .image-box .delete-but').click(function(e) {
			img = $(this).parents('.image-box').find("img.new_picture")
			icon = $(this).parents('.image-box').find(".current_img")
			$(this).parents(".image-box").find("input[type='file']").val("")
			img.addClass("hidden");
			icon.removeClass("hidden");
			
			$(this).parents('.image-box').find(".current_image_pic").addClass("hidden");
			$(this).parents('.image-box').find(".current_image_icon").removeClass("hidden");
			
			$(this).addClass("hidden");
			
			$(this).parents('.image-box').find(".destroy_tag").val(1)
		})
	}
	
	function format_price(element) {
		element.inputmask("decimal", { radixPoint: ".", autoGroup: true, groupSeparator: ",", digits: 2, groupSize: 3 });
	}
	
	function show_city_select_tag() {
		state = ""
		if($('#state_id').length > 0) {
			state = "?state_id="+$('#state_id').val()
		}
		$.ajax({
			url : '<%= select_tag_cities_url %>'+state,
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{		    
				$(".city_select_box").html(data);
				$(".city_select_tag").select2();
			}
		});
	}
	
	function read_notification() {
		$.ajax({
			url : '<%= read_notification_notifications_url %>',
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{		    
				//update_notification();
			}
		});
	}
	
	function update_notification() {
		$.ajax({
			url : '<%= update_notification_notifications_url %>',
			type: "GET",
			success:function(data, textStatus, jqXHR)
			{		    
				$('.top_notification').html(data);				
				$('.notification_count').html($('<div>').html(data).find('.notification_count').html().trim());
			}
		});
	}	
    
    function ReplaceNumberWithDots(yourNumber) {
		yourNumber = yourNumber.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
		return yourNumber
    }
    
      
      
    $(document).ready(function() {
  
		////TABLES
		//Too Small for new file - Helps the to tick all options in the table 
		$('table .checkbox input').click( function() {			
			if($(this).is(':checked')){			
				$(this).parent().parent().parent().toggleClass('row_selected');					
			}
			else{	
			$(this).parent().parent().parent().toggleClass('row_selected');		
			}
		});
		// Demo charts - not required 
		$('.customer-sparkline').each(function () {	
			$(this).sparkline('html', { type:$(this).attr("data-sparkline-type"), barColor:$(this).attr("data-sparkline-color") , enableTagOptions: true });	
		});
	
		//Multiselect for all
		$(".multi_select").select2();
		$(".modern_select").select2({
			allowClear: true,
			placeholder: "All"
		});
		$(".modern_select_none").select2({
			allowClear: true,
			placeholder: "None"
		});
		$(".datetime select").select2();
	
		//filter table
		$('table').not('.no-filter').filterTable();
	
		//prevent submit while submitting form
		$('.btn-submitting').live("click", function(e){ e.preventDefault(); });
	
	    //format typping price
	    //$('input.price_input').number( true, 2 );
		format_price($('input.price_input'));
	    
	    //show order
	    //action for add agent button
	    $('.ajax_iframe').fancybox({
		    width: "100%",
		    height: "100%",
		    autoSize: false,
		    ajax: {
			complete: function(jqXHR, textStatus) {
			    //$(".ajax_outer .modern_select").select2();
			}
		    }
	    });
	    
	    //NICE FILE INPUT
	    $("input[type=file]").nicefileinput();
	    
	    //Datatable products
	    $('.datatable-users').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_users_path %>",
				"data": function ( d ) {
					
				}
			},
			"columnDefs": [ { "targets": [0,2,4], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable contacts
	    $('.datatable-contacts').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_contacts_path %>",
				"data": function ( d ) {
					var types = $(".contact-filter .contact_types input:checkbox:checked").map(function(){
						return $(this).val();
					}).get();
					
					if($(".contact-filter select[name=is_individual]").select2("val") == "true") {						
						d.contact_types = types;
					}
					
					d.is_individual = $(".contact-filter select[name=is_individual]").select2("val");
					
					if($(".contact-filter select[name='tags[]']").val()) {
						d.tags = $(".contact-filter select[name='tags[]'").val()
					}
					
					if($(".contact-filter select[name='course_types[]']").val()) {
						d.course_types = $(".contact-filter select[name='course_types[]']").val()
					}
					
					if($(".contact-filter select[name='subjects[]']").val()) {
						d.subjects = $(".contact-filter select[name='subjects[]']").val()
					}
					
					if($(".contact-filter select[name='filter[intake(2i)]']").val()) {
						d.intake_month =  $(".contact-filter select[name='filter[intake(2i)]']").val()
					}
					
					if($(".contact-filter select[name='filter[intake(1i)]']").val()) {
						d.intake_year =  $(".contact-filter select[name='filter[intake(1i)]']").val()
					}
					
					if($(".contact-filter input[name='courses']").val()) {
						d.courses =  $(".contact-filter input[name='courses']").val()
					}
					
					if($(".contact-filter input[name='seminars']").val()) {
						d.seminars =  $(".contact-filter input[name='seminars']").val()
					}
					
					if($(".contact-filter input[name='courses_phrases']").val()) {
						d.courses_phrases =  $(".contact-filter input[name='courses_phrases']").val()
					}
					
					if($(".contact-filter select[name='status']").val()) {
						d.status =  $(".contact-filter select[name='status']").val()
					}
					
					if($(".contact-filter input[name='created_from']").val()) {
						d.created_from =  $(".contact-filter input[name='created_from']").val()
					}
					
					if($(".contact-filter input[name='created_to']").val()) {
						d.created_to =  $(".contact-filter input[name='created_to']").val()
					}
					
					if($(".contact-filter select[name='payment_type']").val()) {
						d.payment_type =  $(".contact-filter select[name='payment_type']").val()
					}
					
					if($(".contact-filter input[name='company']").val()) {
						d.company =  $(".contact-filter input[name='company']").val()
					}
					
					if($(".contact-filter select[name='user']").val()) {
						d.user =  $(".contact-filter select[name='user']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,2,3,4,5,7,9], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable contacts
	    $('.datatable-seminar-students').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= seminar_students_contacts_path %>",
				"data": function ( d ) {
					var types = $(".contact-filter .contact_types input:checkbox:checked").map(function(){
						return $(this).val();
					}).get();
					
					if($(".contact-filter select[name=is_individual]").select2("val") == "true") {						
						d.contact_types = types;
					}
					
					d.is_individual = $(".contact-filter select[name=is_individual]").select2("val");
					
					if($(".contact-filter select[name='tags[]']").val()) {
						d.tags = $(".contact-filter select[name='tags[]']").val()
					}
					
					if($(".contact-filter select[name='course_types[]']").val()) {
						d.course_types = $(".contact-filter select[name='course_types[]']").val()
					}
					
					if($(".contact-filter select[name='subjects[]']").val()) {
						d.subjects = $(".contact-filter select[name='subjects[]']").val()
					}
					
					if($(".contact-filter select[name='filter[intake(2i)]']").val()) {
						d.intake_month =  $(".contact-filter select[name='filter[intake(2i)]']").val()
					}
					
					if($(".contact-filter select[name='filter[intake(1i)]']").val()) {
						d.intake_year =  $(".contact-filter select[name='filter[intake(1i)]']").val()
					}
					
					if($(".contact-filter input[name='courses']").val()) {
						d.courses =  $(".contact-filter input[name='courses']").val()
					}
					
					if($(".contact-filter input[name='seminars']").val()) {
						d.seminars =  $(".contact-filter input[name='seminars']").val()
					}
					
					if($(".contact-filter input[name='courses_phrases']").val()) {
						d.courses_phrases =  $(".contact-filter input[name='courses_phrases']").val()
					}
					
					if($(".contact-filter select[name='status']").val()) {
						d.status =  $(".contact-filter select[name='status']").val()
					}
					
					if($(".contact-filter input[name='created_from']").val()) {
						d.created_from =  $(".contact-filter input[name='created_from']").val()
					}
					
					if($(".contact-filter input[name='created_to']").val()) {
						d.created_to =  $(".contact-filter input[name='created_to']").val()
					}
					
					if($(".contact-filter select[name='payment_type']").val()) {
						d.created_to =  $(".contact-filter select[name='payment_type']").val()
					}
					if($(".contact-filter input[name='company']").val()) {
						d.company =  $(".contact-filter input[name='company']").val()
					}
				}				
			},
			"columnDefs": [ { "targets": [0,1,3,4,5,6,7,8], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25,
			"fnDrawCallback": function () {
				updateSeminarContactsCount()
			}
	    });
		
		//Datatable contacts
	    $('.datatable-course-students').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= course_students_contacts_path %>",
				"data": function ( d ) {
					var types = $(".contact-filter .contact_types input:checkbox:checked").map(function(){
						return $(this).val();
					}).get();
					
					if($(".contact-filter select[name=is_individual]").select2("val") == "true") {						
						d.contact_types = types;
					}
					
					d.is_individual = $(".contact-filter select[name=is_individual]").select2("val");
					
					if($(".contact-filter select[name='tags[]']").val()) {
						d.tags = $(".contact-filter select[name='tags[]']").val()
					}
					
					if($(".contact-filter select[name='course_types[]']").val()) {
						d.course_types = $(".contact-filter select[name='course_types[]']").val()
					}
					
					if($(".contact-filter select[name='subjects[]']").val()) {
						d.subjects = $(".contact-filter select[name='subjects[]']").val()
					}
					
					if($(".contact-filter select[name='filter[intake(2i)]']").val()) {
						d.intake_month =  $(".contact-filter select[name='filter[intake(2i)]']").val()
					}
					
					if($(".contact-filter select[name='filter[intake(1i)]']").val()) {
						d.intake_year =  $(".contact-filter select[name='filter[intake(1i)]']").val()
					}
					
					if($(".contact-filter input[name='courses']").val()) {
						d.courses = $(".contact-filter input[name='courses']").val()
					}
					
					if($(".contact-filter input[name='seminars']").val()) {
						d.seminars =  $(".contact-filter input[name='seminars']").val()
					}
					
					if($(".contact-filter input[name='courses_phrases']").val()) {
						d.courses_phrases =  $(".contact-filter input[name='courses_phrases']").val()
					}
					
					if($(".contact-filter select[name='status']").val()) {
						d.status =  $(".contact-filter select[name='status']").val()
					}
					
					if($(".contact-filter input[name='created_from']").val()) {
						d.created_from =  $(".contact-filter input[name='created_from']").val()
					}
					
					if($(".contact-filter input[name='created_to']").val()) {
						d.created_to =  $(".contact-filter input[name='created_to']").val()
					}
					
					if($(".contact-filter select[name='payment_type']").val()) {
						d.created_to =  $(".contact-filter select[name='payment_type']").val()
					}
					
					if($(".contact-filter input[name='company']").val()) {
						d.company =  $(".contact-filter input[name='company']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,1,3,4,5,6,7,8], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		
		//Datatable course types
	    $('.datatable-course-types').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_course_types_path %>",
				"data": function ( d ) {
					if($(".course-type-filter select[name='status']").val()) {
						d.status =  $(".course-type-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [3,4,5], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-subjects').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_subjects_path %>",
				"data": function ( d ) {
					d.course_types = $("select[name='filter[course_types[]]']").val()
					if($(".subject-filter select[name='status']").val()) {
						d.status =  $(".subject-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [1,3,4,5], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable courses
	    $('.datatable-courses').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_courses_path %>",
				"data": function ( d ) {
					d.intake_month =  $(".course-filter select[name='filter[intake(2i)]']").val(),
					d.intake_year =  $(".course-filter select[name='filter[intake(1i)]']").val(),
					d.course_types = $(".course-filter select[name='filter[course_types[]]']").val()
					d.subjects = $(".course-filter select[name='filter[subjects[]]']").val()
					d.students = $(".course-filter input[name='filter[students[]]']").val()
					d.lecturers = $(".course-filter input[name='filter[lecturers[]]']").val()
					
					if($(".course-filter select[name='status']").val()) {
						d.status =  $(".course-filter select[name='status']").val()
					}
					
					if($(".course-filter select[name='for_exam_month']").val()) {
						d.for_exam_month =  $(".course-filter select[name='for_exam_month']").val()
					}
					if($(".course-filter select[name='for_exam_year']").val()) {
						d.for_exam_year =  $(".course-filter select[name='for_exam_year']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [2,4,5,6,8,9,10], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable courses
	    $('.datatable-student-courses').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= student_courses_courses_path %>",
				"data": function ( d ) {
					d.intake_month =  $(".course-filter select[name='filter[intake(2i)]']").val(),
					d.intake_year =  $(".course-filter select[name='filter[intake(1i)]']").val(),
					d.course_types = $(".course-filter select[name='filter[course_types[]]']").val()
					d.subjects = $(".course-filter select[name='filter[subjects[]]']").val()
					d.students = $(".course-filter input[name='filter[students[]]']").val()
					d.lecturers = $(".course-filter input[name='filter[lecturers[]]']").val()
					
					if($(".course-filter select[name='status']").val()) {
						d.status =  $(".course-filter select[name='status']").val()
					}
					
					if($(".course-filter select[name='for_exam_month']").val()) {
						d.for_exam_month =  $(".course-filter select[name='for_exam_month']").val()
					}
					if($(".course-filter select[name='for_exam_year']").val()) {
						d.for_exam_year =  $(".course-filter select[name='for_exam_year']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,4,5,6], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable books
	    $('.datatable-books').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_books_path %>",
				"data": function ( d ) {
					d.program_id = $(".book-filter select[name='filter[course_types[]]']").val()
					d.subject_id = $(".book-filter select[name='filter[subjects[]]']").val()
					
					if($(".book-filter input[name='student']").val()) {
						d.student =  $(".book-filter input[name='student']").val()
					}
					
					if($(".book-filter select[name='stock_types[]']").val()) {
						d.stock_types =  $(".book-filter select[name='stock_types[]']").val()
					}
					
					if($(".book-filter select[name='status']").val()) {
						d.status =  $(".book-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,2,3,4,5,6,7,8,9,10], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable books
	    $('.datatable-student-books').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= student_books_books_path %>",
				"data": function ( d ) {
					d.program_id = $(".book-filter select[name='filter[course_types[]]']").val()
					d.subject_id = $(".book-filter select[name='filter[subjects[]]']").val()
					
					if($(".book-filter input[name='student']").val()) {
						d.student =  $(".book-filter input[name='student']").val()
					}
					
					if($(".book-filter select[name='stock_types[]']").val()) {
						d.stock_types =  $(".book-filter select[name='stock_types[]']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,3,4,5,6,7], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable books
	    $('.datatable-stock-statistics').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= statistics_books_path %>",
				"data": function ( d ) {
					if($(".stock-statistics-filter input[name='from_date']").val()) {
						d.from_date =  $(".stock-statistics-filter input[name='from_date']").val()
					}
					if($(".stock-statistics-filter input[name='to_date']").val()) {
						d.to_date =  $(".stock-statistics-filter input[name='to_date']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,2,3,4,5,6], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable courses
	    $('.datatable-contact-tags').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_contact_tags_path %>",
				"data": function ( d ) {
					if($(".contact-tag-filter select[name='status']").val()) {
						d.status =  $(".contact-tag-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [1,2,3,4], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
	    
		//Datatable seminars
	    $('.datatable-seminars').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_seminars_path %>",
				"data": function ( d ) {
					d.course_types = $("select[name='filter[course_types[]]']").val()
					if($(".seminar-filter select[name='status']").val()) {
						d.status =  $(".seminar-filter select[name='status']").val()						
					}
					if($(".seminar-filter input[name='contact_id']").val()) {
						d.contact_id = $(".seminar-filter input[name='contact_id']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [1,2,3,5,6], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable seminars
	    $('.datatable-student-seminars').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= student_seminars_seminars_path %>",
				"data": function ( d ) {
					d.course_types = $("select[name='filter[course_types[]]']").val()
					if($(".seminar-filter select[name='status']").val()) {
						d.status =  $(".seminar-filter select[name='status']").val()						
					}
					if($(".seminar-filter input[name='contact_id']").val()) {
						d.contact_id = $(".seminar-filter input[name='contact_id']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [1,2,3,5,6], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-phrases').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_phrases_path %>",
				"data": function ( d ) {
					d.subjects = $("select[name='filter[subjects[]]']").val()
					d.course_types = $("select[name='filter[course_types[]]']").val()
					if($(".phrase-filter select[name='status']").val()) {
						d.status =  $(".phrase-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [1,2,4,5,6], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-bank-accounts').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_bank_accounts_path %>",
				"data": function ( d ) {
					if($(".bank-account-filter select[name='status']").val()) {
						d.status =  $(".bank-account-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [1,2,3,5,6,7], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-course-registers').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_course_registers_path %>",
				"data": function ( d ) {
					if($(".course-register-filter select[name='course_types[]']").val()) {
						d.course_types = $(".course-register-filter select[name='course_types[]']").val()
					}
					
					if($(".course-register-filter select[name='subjects[]']").val()) {
						d.subjects = $(".course-register-filter select[name='subjects[]']").val()
					}
					
					if($(".course-register-filter select[name='filter[intake(2i)]']").val()) {
						d.intake_month =  $(".course-register-filter select[name='filter[intake(2i)]']").val()
					}
					
					if($(".course-register-filter select[name='filter[intake(1i)]']").val()) {
						d.intake_year =  $(".course-register-filter select[name='filter[intake(1i)]']").val()
					}
					
					if($(".course-register-filter input[name='courses']").val()) {
						d.courses =  $(".course-register-filter input[name='courses']").val()
					}
					
					if($(".course-register-filter input[name='courses_phrases']").val()) {
						d.courses_phrases =  $(".course-register-filter input[name='courses_phrases']").val()
					}
					
					if($(".course-register-filter input[name='student']").val()) {
						d.student =  $(".course-register-filter input[name='student']").val()
					}
					
					d.delivery_statuses = $(".course-register-filter select[name='delivery_statuses']").val()
					d.payment_statuses = $(".course-register-filter select[name='payment_statuses']").val()
					
					if($(".course-register-filter select[name='status']").val()) {
						d.status =  $(".course-register-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,4,5,7,8,9], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-student-course-registers').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= student_course_registers_course_registers_path %>",
				"data": function ( d ) {
					if($(".course-register-filter select[name='course_types[]']").val()) {
						d.course_types = $(".course-register-filter select[name='course_types[]']").val()
					}
					
					if($(".course-register-filter select[name='subjects[]']").val()) {
						d.subjects = $(".course-register-filter select[name='subjects[]']").val()
					}
					
					if($(".course-register-filter select[name='filter[intake(2i)]']").val()) {
						d.intake_month =  $(".course-register-filter select[name='filter[intake(2i)]']").val()
					}
					
					if($(".course-register-filter select[name='filter[intake(1i)]']").val()) {
						d.intake_year =  $(".course-register-filter select[name='filter[intake(1i)]']").val()
					}
					
					if($(".course-register-filter input[name='courses']").val()) {
						d.courses =  $(".course-register-filter input[name='courses']").val()
					}
					
					if($(".course-register-filter input[name='courses_phrases']").val()) {
						d.courses_phrases =  $(".course-register-filter input[name='courses_phrases']").val()
					}
					
					if($(".course-register-filter input[name='student']").val()) {
						d.student =  $(".course-register-filter input[name='student']").val()
					}
					
					d.delivery_statuses = $(".course-register-filter select[name='delivery_statuses']").val()
					d.payment_statuses = $(".course-register-filter select[name='payment_statuses']").val()
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,4,6,7,8], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable books
	    $('.datatable-payment-records').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_payment_records_path %>",
				"data": function ( d ) {
					d.students = $(".payment-record-filter input[name='filter[students[]]']").val()
					if($(".payment-record-filter select[name='course_types[]']").val()) {
						d.course_types = $(".payment-record-filter select[name='course_types[]']").val()
					}					
					if($(".payment-record-filter input[name='courses']").val()) {
						d.courses =  $(".payment-record-filter input[name='courses']").val()
					}
					if($(".payment-record-filter input[name='from_date']").val()) {
						d.from_date =  $(".payment-record-filter input[name='from_date']").val()
					}
					if($(".payment-record-filter input[name='to_date']").val()) {
						d.to_date =  $(".payment-record-filter input[name='to_date']").val()
					}
					if($(".payment-record-filter select[name='bank_account']").val()) {
						d.bank_account =  $(".payment-record-filter select[name='bank_account']").val()
					}
					if($(".payment-record-filter input[name='account_manager']").val()) {
						d.account_manager =  $(".payment-record-filter input[name='account_manager']").val()
					}
					if($(".payment-record-filter input[name='company']").val()) {
						d.company =  $(".payment-record-filter input[name='company']").val()
					}
					d.receivable = $(".payment-record-filter input[name='receivable']:checked").val()
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,5,6,7,8], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable contacts
	    $('.datatable-activities').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_activities_path %>",
				"data": function ( d ) {
					d.contact_id = $(".activity-filter input[name='activity[contact_id]']").val()
					
					if($(".activity-filter input[name='from_date']").val()) {
						d.from_date =  $(".activity-filter input[name='from_date']").val()
					}
					
					if($(".activity-filter input[name='to_date']").val()) {
						d.to_date =  $(".activity-filter input[name='to_date']").val()
					}
					
					if($(".activity-filter input[name='contact']").val()) {
						d.contact =  $(".activity-filter input[name='contact']").val()
					}
					
					if($(".activity-filter select[name='user']").val()) {
						d.user =  $(".activity-filter select[name='user']").val()
					}
					
					if($(".activity-filter select[name='status']").val()) {
						d.status =  $(".activity-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,2,3,4,5], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-transfers').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_transfers_path %>",
				"data": function ( d ) {
					if($(".transfer-filter input[name='from_date']").val()) {
						d.from_date =  $(".transfer-filter input[name='from_date']").val()
					}
					if($(".transfer-filter input[name='to_date']").val()) {
						d.to_date =  $(".transfer-filter input[name='to_date']").val()
					}
					if($(".transfer-filter input[name='to_contact']").val()) {
						d.to_contact =  $(".transfer-filter input[name='to_contact']").val()
					}
					if($(".transfer-filter input[name='from_contact']").val()) {
						d.from_contact =  $(".transfer-filter input[name='from_contact']").val()
					}
					if($(".transfer-filter input[name='contact']").val()) {
						d.contact =  $(".transfer-filter input[name='contact']").val()
					}
					if($(".transfer-filter select[name='status']").val()) {
						d.status =  $(".transfer-filter select[name='status']").val()
					}
					d.payment_statuses = $(".transfer-filter select[name='payment_statuses']").val()
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,4,5,6,8,9], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-delivery').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_books_contacts_path %>",
				"data": function ( d ) {
					if($(".delivery-filter select[name='books[]']").val()) {
						d.books = $(".delivery-filter select[name='books[]']").val()
					}
					
					if($(".delivery-filter select[name='stock_types[]']").val()) {
						d.stock_types =  $(".delivery-filter select[name='stock_types[]']").val()
					}
					
					if($(".delivery-filter select[name='course_types[]']").val()) {
						d.course_types = $(".delivery-filter select[name='course_types[]']").val()
					}
					
					if($(".delivery-filter select[name='subjects[]']").val()) {
						d.subjects = $(".delivery-filter select[name='subjects[]']").val()
					}
					
					if($(".delivery-filter select[name='filter[intake(2i)]']").val()) {
						d.intake_month =  $(".delivery-filter select[name='filter[intake(2i)]']").val()
					}
					
					if($(".delivery-filter select[name='filter[intake(1i)]']").val()) {
						d.intake_year =  $(".delivery-filter select[name='filter[intake(1i)]']").val()
					}
					
					if($(".delivery-filter input[name='courses']").val()) {
						d.courses =  $(".delivery-filter input[name='courses']").val()
					}
					
					if($(".delivery-filter input[name='courses_phrases']").val()) {
						d.courses_phrases =  $(".delivery-filter input[name='courses_phrases']").val()
					}
					
					if($(".delivery-filter input[name='student']").val()) {
						d.student =  $(".delivery-filter input[name='student']").val()
					}
					
					d.delivery_statuses = $(".delivery-filter select[name='delivery_statuses']").val()
					d.upfront = $(".delivery-filter input[name='upfront']:checked").val()
				}
			},
			"columnDefs": [ { "targets": [0,2,3,4,5,6,7], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable course types
	    $('.datatable-stock-updates').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_stock_updates_path %>",
				"data": function ( d ) {
					if($(".stock-update-filter input[name='created_from']").val()) {
						d.created_from =  $(".stock-update-filter input[name='created_from']").val()
					}
					
					if($(".stock-update-filter input[name='created_to']").val()) {
						d.created_to =  $(".stock-update-filter input[name='created_to']").val()
					}
					
					if($(".stock-update-filter select[name='type_name']").val()) {
						d.type_name =  $(".stock-update-filter select[name='type_name']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,4,5], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable course types
	    $('.datatable-payment-list').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_payment_list_payment_records_path %>",
				"data": function ( d ) {
					if($(".payment-list-filter select[name='course_types[]']").val()) {
						d.course_types = $(".payment-list-filter select[name='course_types[]']").val()
					}
					
					if($(".payment-list-filter select[name='subjects[]']").val()) {
						d.subjects = $(".payment-list-filter select[name='subjects[]']").val()
					}
					
					if($(".payment-list-filter select[name='filter[intake(2i)]']").val()) {
						d.intake_month =  $(".payment-list-filter select[name='filter[intake(2i)]']").val()
					}
					
					if($(".payment-list-filter select[name='filter[intake(1i)]']").val()) {
						d.intake_year =  $(".payment-list-filter select[name='filter[intake(1i)]']").val()
					}
					
					if($(".payment-list-filter input[name='student']").val()) {
						d.student =  $(".payment-list-filter input[name='student']").val()
					}
					
					if($(".payment-list-filter input[name='company']").val()) {
						d.company =  $(".payment-list-filter input[name='company']").val()
					}
					
					d.payment_statuses = $(".payment-list-filter select[name='payment_statuses']").val()
					d.upfront = $(".payment-list-filter input[name='course[upfront]']:checked").val()
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,4,5,6,7,8], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
		//Datatable subjects
	    $('.datatable-stock-types').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_stock_types_path %>",
				"data": function ( d ) {					
					if($(".stock-type-filter select[name='status']").val()) {
						d.status =  $(".stock-type-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [0,1,2,3,4,5], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
		
	    $('select[name="DataTables_Table_0_length"]').select2({allowClear: true});
		
		//ajax select2 for contacts
	    $('.select2-ajax-contacts').select2({
			placeholder: "Search for a contact",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-contacts').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-contacts').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term				  
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-companies').select2({
			placeholder: "Search for a company",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-companies').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-companies').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term				  
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-lecturers').select2({
			placeholder: "Search for a contact",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-lecturers').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-lecturers').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term				  
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-students').select2({
			placeholder: "Search for a contact",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-students').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-students').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term				  
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for state
	    $('.select2-ajax-states').select2({
			placeholder: "Search for a state",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-states').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-states').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-course-types').select2({
			placeholder: "Search for a program",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-course-types').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-course-types').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  if (!element.hasClass("multiple")) {
				callback({ id: element.val(), text: element.attr('text') });
			  } else {
				
			  }
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-bases').select2({
			placeholder: "Search for a program",
			minimumInputLength: 1,
			allowClear: true,
			ajax: {
			  url: $('.select2-ajax-bases').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  if (!element.hasClass("multiple")) {
				callback({ id: element.val(), text: element.attr('text') });
			  } else {
				
			  }
			}
	    });
		
		//ajax select2 for contacts		
	    $('.select2-ajax-subjects').select2({
			placeholder: "Search for a subject",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-subjects').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-subjects').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-course-types-subjects').select2({
			placeholder: "Search for a Program - Paper",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-course-types-subjects').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-course-types-subjects').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contact tags
	    $('.select2-ajax-contact-tags').select2({
			placeholder: "Search for a tag",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-contact-tags').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-contact-tags').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-courses').select2({
			placeholder: "Search for a course",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-courses').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-courses').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term				  
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts
	    $('.select2-ajax-books').select2({
			placeholder: "Search for a book",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-books').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-books').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term				  
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		
		//ajax select2 for contacts		
	    $('.select2-ajax-phrases').select2({
			placeholder: "Search for a phrase",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-phrases').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-phrases').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for contacts		
	    $('.select2-ajax-discount-programs').select2({
			placeholder: "Search for a discount program",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-discount-programs').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-discount-programs').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//ajax select2 for bank
	    $('.select2-ajax-bank-accounts').select2({
			placeholder: "Search for a bank account",
			minimumInputLength: 1,
			allowClear: true,
			multiple: $('.select2-ajax-bank-accounts').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-bank-accounts').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term				  
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val(), text: element.attr('text') });
			}
	    });
		
		//Datatable subjects
	    $('.datatable-discount-programs').dataTable( {
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "<%= datatable_discount_programs_path %>",
				"data": function ( d ) {
					d.course_types = $("select[name='filter[course_types[]]']").val()
					if($(".discount-program-filter select[name='status']").val()) {
						d.status =  $(".discount-program-filter select[name='status']").val()
					}
				}
			},
			"columnDefs": [ { "targets": [1,2,6,7,8], "orderable": false } ],
			"order": [],
			"aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
			"iDisplayLength": 25
	    });
	    
	    $('.dataTables_length select').select2({allowClear: true});
	    
	    $('.date_select_filter select[name="filter[intake(1i)]"]').select2({
			allowClear: true,
			placeholder: "year"
	    });
	    
	    $('.date_select_filter  select[name="filter[intake(2i)]"]').select2({
			allowClear: true,
			placeholder: "month"
	    });
	    
	    $('.date_select_filter  select[name="filter[intake(3i)]"]').select2({
			allowClear: true,
			placeholder: "day"
	    });
	    
	    $('.select2-ajax-users').select2({
			placeholder: "Search for a user",
			allowClear: true,
			minimumInputLength: 1,
			ajax: {
			  url: $('.select2-ajax-users').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
			  callback({ id: element.val, text: element.attr('text') });
			}
	    });
		
		$('.select2-ajax-seminars').select2({
			placeholder: "Search for a seminar",
			allowClear: true,
			minimumInputLength: 1,
			//multiple: $('.select2-ajax-seminars').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-seminars').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
				callback({ id: element.val, text: element.attr('text') });
			}
	    });
		
		$('.select2-ajax-stock-types').select2({
			placeholder: "Search for a stock type",
			allowClear: true,
			minimumInputLength: 1,
			multiple: $('.select2-ajax-stock-types').hasClass("multiple"),
			ajax: {
			  url: $('.select2-ajax-stock-types').attr("data"),
			  dataType: 'json',
			  data: function (term, page) { // page is the one-based page number tracked by Select2
				return {
				  q: term, //search term
				};
			  },
			  results: function (data, page) {
				return {results: data};
			  }
			},
			initSelection: function (element, callback) {				      
				callback({ id: element.val, text: element.attr('text') });
			}
	    });
	    
		//number input
	    $('input.number_input').number(true, 2);
		$('input.number_input_0').number(true, 0);
		
		//select2 for datatable
		setTimeout("$('.dataTables_wrapper select').select2();", 2000);
		
		//fancybox link
		$('.fancybox_link').fancybox({width: "100%",'autoDimensions': false, 'autoSize':false});
		
		//contact filter
		$(document).on("change", "#contact_filter input, #contact_filter select", function() {
			$('.datatable-contacts').dataTable().fnFilter();
			$('.datatable-course-students').dataTable().fnFilter();
			$('.datatable-seminar-students').dataTable().fnFilter();
			
			clearListCheck()
	    });		
		
		$('#tab-01 a').click(function (e) {
			e.preventDefault();
			$(this).tab('show');
		});
		
		$('#avatar_capture a').click(function (e) {
			e.preventDefault();
			$(this).tab('show');
		});
		
		updateBoxesOrder()
		$( "#sortable" ).sortable({
			helper : 'clone',
			update: function( event, ui ) {
				updateBoxesOrder()
			}
		});
		$( "#sortable" ).disableSelection();

		
		//upload image boxes
		uploaderBoxes()
		
		//form validation
		$('form').validate();
		
		$('#main-tab a').click(function (e) {
			e.preventDefault();
			$(this).tab('show');
		});
		
		$(document).on("click",".tab_page", function(e) {
			e.preventDefault()
			
			pname = false
			psrc = false
			if (typeof($(this).attr("psrc")) != 'undefined') {
				pname = $(this).attr("pname")
				psrc = $(this).attr("psrc")
			}
			
			if($('body.main-frame-page').length) {
              openTab($(this).attr("href"), $(this).attr("title"),psrc,pname)
            } else {
              parent.openTab($(this).attr("href"), $(this).attr("title"),psrc,pname)
            }
		})
        
        $(document).on("click",".main-content-frame .cancel-but",function(e) {
			e.preventDefault()			
			parent.closeTab(window.parent.$("#main-tab li.active a").attr("href").replace("#",""))
		})
		
		$('.date-group select').select2();
		
		$('.stock-type-filter select, .stock-type-filter input,.payment-list-filter select, .payment-list-filter input,.stock-update-filter select, .stock-update-filter input,.delivery-filter select, .delivery-filter input,.activity-filter select, .activity-filter input,.phrase-filter select, .phrase-filter input,.subject-filter select, .subject-filter input,.seminar-filter select, .seminar-filter input,.contact-tag-filter select, .contact-tag-filter input,.bank-account-filter select, .bank-account-filter input,.discount-program-filter select, .discount-program-filter input,.course-type-filter select, .course-type-filter input,.transfer-filter select, .transfer-filter input,.payment-record-filter select, .payment-record-filter input, .course-filter select, .course-filter input, .book-filter input, .book-filter select, .course-register-filter input, .course-register-filter select').change(function() {
			$('.datatable-courses').dataTable().fnFilter();
			$('.datatable-student-courses').dataTable().fnFilter();
			$('.datatable-subjects').dataTable().fnFilter();
			$('.datatable-seminars').dataTable().fnFilter();
			$('.datatable-student-seminars').dataTable().fnFilter();
			$('.datatable-phrases').dataTable().fnFilter();
			$('.datatable-books').dataTable().fnFilter();
			$('.datatable-student-books').dataTable().fnFilter();
			$('.datatable-course-registers').dataTable().fnFilter();
			$('.datatable-student-course-registers').dataTable().fnFilter();
			$('.datatable-payment-records').dataTable().fnFilter();
			$('.datatable-transfers').dataTable().fnFilter();
			$('.datatable-course-types').dataTable().fnFilter();
			$('.datatable-discount-programs').dataTable().fnFilter();
			$('.datatable-bank-accounts').dataTable().fnFilter();
			$('.datatable-contact-tags').dataTable().fnFilter();
			$('.datatable-activities').dataTable().fnFilter();
			$('.datatable-delivery').dataTable().fnFilter();
			$('.datatable-stock-updates').dataTable().fnFilter();
			$('.datatable-payment-list').dataTable().fnFilter();
			$('.datatable-stock-types').dataTable().fnFilter();
		});
		
		checkContactType()
		$('input[name="contact[is_individual]"], select[name="is_individual"]').change(function() {
			checkContactType()
		});
		
		checkInvoiceRequired()
		$('.invoice_required').change(function() {
			checkInvoiceRequired()
		});
		
		$(document).on("click",".contact_tag_item",function() {
			updateContactTag($(this).attr("rel"), $(this).attr("tag_id"))
		})
		
		ajaxQuickContactInfo($('input[name="contact[referrer_id]"]').val(),$('.selected_company_info'))
		$('input[name="contact[referrer_id]"]').change(function() {
			ajaxQuickContactInfo($(this).val(),$('.selected_company_info'))
			changeComanyTrigger($(this))
		})
		
		ajaxQuickContactInfo($('input[name="contact[invoice_info_id]"]').val(),$('.selected_invoice_info'))
		$('input[name="contact[invoice_info_id]"]').change(function() {
			ajaxQuickContactInfo($(this).val(),$('.selected_invoice_info'))
		})
		
		$(document).on("click",".refresh_contact_info",function() {
			ajaxQuickContactInfo($(this).attr("rel"),$(this).parent().parent())
		})
		
		$('select[name="contact[payment_type]"]').change(function() {
			if ($(this).val() == "company-sponsored" && $('input[name="contact[referrer_id]"]').val() == "") {
				alert("Must choose company first!")
				$(this).select2("val", 'self-financed');
			}
		})
		
		$(document).on("change","table .checkbox input",function() {
			if($(this).is(":checked")) {
				$(this).parents("tr").addClass("row_selected")
			} else {
				$(this).parents("tr").removeClass("row_selected")
			}
			var count = $('input[name="ids[]"]:checked').length
			$('.listing_box_actions .listing_checked_count').html(count)
			
			$('.check_all_page').attr("checked",false)
			
			getDeliveryCounting()
		})
		
		$(document).on("click",".listing_actions li a",function() {
			if ($(this).attr("rel").trim() == "") {
				return
			}
			var count = $('input[name="ids[]"]:checked').length
			if (count > 0) {
				var form = $(".listing_form")
				var link = $(this)
				if (typeof($(this).attr("type")) != 'undefined' && $(this).attr("type") == "tab") {
					parent.openTab(link.attr("rel")+"&"+form.serialize(), link.attr("title"))
				} else if(typeof($(this).attr("type")) != 'undefined' && $(this).attr("type") == "ajax") {
					$.ajax({
							type: "POST",
							url: link.attr("rel"),
							data: form.serialize(),
							success: function(data, textStatus, jqXHR)
							{
								alert(data)
								window.parent.$(".tab-pane.active .main-frame")[0].contentWindow.reloadDatatable()
							}
					})
				} else {
					$(".listing_form").attr("action", $(this).attr("rel"))
					$(".listing_form").submit()
				}
			} else {
				alert("Need to choose contact(s) first!")
			}
			getDeliveryCounting()
		})
		
		
		$(document).on("change",".check_all_page",function() {
			if($(this).is(":checked")) {
				allListCheck()
			} else {
				clearListCheck()
			}
			getDeliveryCounting()
		})
		
		
		$(".related_info_input").each(function(){
			checkRelatedInfo($(this))
		});		
		$(document).on("keyup",".related_info_input",function() {			
			checkRelatedInfo($(this))
		})
		$('.related_info_input').focus( function() {
			checkRelatedInfo($(this))
		});		  
		$(document).click( function() {
			$(".related_info_box").hide()
		});
		$('.related_info_input').click( function() {
			checkRelatedInfo($(this))
		});
		$('.related_info_input').change( function() {
			checkRelatedInfo($(this))
		});
		
		$('.datetimepicker').datetimepicker();
		
		
		
		$(document).on("click",".add_contact_to_seminar_but",function() {			
			var contact_ids = $('input[name="contacts"]').select2("val")
			
			if (contact_ids.length > 0) {
				addContactToSeminar($(this).attr("rel"), contact_ids)
			} else {
				alert("Contact box is empty! Let's find contact(s) first.")
			}
		})
		
		$(document).on("click",".remove_contact_from_seminar_but",function() {			
			var contact_ids = [$(this).attr("contact_ids")]
			
			if (contact_ids.length > 0) {
				removeContactToSeminar($(this).attr("rel"), contact_ids)
			}
		})
		
		$(document).on("click",".remove_contacts_from_seminar_but",function() {			
			var contact_ids = $('table input[name="ids[]"]:checked').map(function(){
						return $(this).val();
					}).get();
			var count = $('table input[name="ids[]"]:checked').length
			if (count > 0) {
				if (contact_ids.length > 0) {
					removeContactToSeminar($(this).attr("sid"), contact_ids)
				}
			} else {
				alert("Need to choose contact(s) first!")
			}
		})
		
		$('.fancybox').fancybox();
		
		
		$('select[name="course_register[preferred_mailing]"]').change(function() {
			changeMailingPreferred($(this))
		})	
		$('select[name="contact[preferred_mailing]"]').change(function() {
			changeMailingPreferred($(this))
		})
		$('select[name="contact[preferred_mailing]"]').trigger("change")
		$('select[name="course_register[preferred_mailing]"]').trigger("change")
		
		
		$(document).on("change",".phrase_boxx .main_input",function() {
			var value = $(this).val()
			var next_box = $(this).parents(".phrase_boxx").next()
			if (value != "") {
				next_box.show()
			} else if (next_box.find(".main_input").val() == "") {
				next_box.hide()
			}
		})
		
		$('.base_box .main_input').change(function() {
			var value = $(this).select2("val")
			var next_box = $(this).parents(".base_box").next()
			if (value != "") {
				next_box.show()
			} else if (next_box.find(".main_input").val() == "") {
				next_box.hide()
			}
		})
		
		$('.add-more-course-form').click(function() {
			$('.phrase_box_list .phrase_box').each(function() {
				if ($(this).hasClass("hidden")) {
					$(this).removeClass("hidden")
					return false
				}				
			})
		});
		
		$(document).on("click", ".phrase_box_close", function(e) {			
			var val = $(this).attr("rel")
			$('.phrase_box_'+val).find(".main_input").select2("val","")
			$('.phrase_box_'+val).find(".main_input").trigger("change")
			$('.phrase_box_'+val).addClass("hidden")
		});
		
		$('.registration_course').change(function() {
			updateCoursePhraseForm($(this))
			updateCoursePriceForm($(this))
			
		})
		
		$(document).on("click", ".ajax-check-radio", function(e) {
			e.preventDefault();
			
			if ($(this).attr("href") == "#none") {
				return
			}
			
			var box = $(this).parent()
			var url = $(this).attr("href")
			
			$.ajax({
				url : url,
				type: "GET",
				success:function(data, textStatus, jqXHR)
				{
					box.html(data)
				}
			});
		});
		
		updateProgramsBox()
		$(document).on("change", "input[name='contact[contact_type_ids][]']", function(e) {
			updateProgramsBox()
		});
		
		$('.price_line input').keyup(function() {
			var val = $(this).val()
			var next = $(this).parents(".price_line").next()
			if (val != "" || parseInt(val) > 0) {
				next.show()
			} else {
				next.hide()
			}
		})
		$('.price_line input').click(function() {
			var val = $(this).val()
			var next = $(this).parents(".price_line").next()
			if (val != "" || parseInt(val) > 0) {
				next.show()
			} else {
				next.hide()
			}
		})
		
		calculateCoursePriceForm()
		$(document).on("change", ".phrase_box input, .phrase_box select", function(e) {
			calculateCoursePriceForm()
		});
		$(document).on("keyup", ".phrase_box input", function(e) {
			calculateCoursePriceForm()
		});
		
		
		$('.add-more-stock-form').click(function() {
			$('.stock_box_list .stock_box').each(function() {
				if ($(this).hasClass("hidden")) {
					$(this).removeClass("hidden")
					updateBookForm(false, false, $(this).attr("rel"))
					return false
				}
			})
		});
		
		$(document).on("click", ".stock_box_close", function(e) {			
			var val = $(this).attr("rel")
			$('.stock_box_'+val).find("select[name=book_id]").select2("val","")
			$('.stock_box_'+val).find("select[name=book_id]").trigger("change")
			$('.stock_box_'+val).addClass("hidden")
		});
		
		//updateBookForm(false, false, 0)		
		//$('input[name="program_id"]').change(function() {
		//	updateBookForm($(this),false, $(this).attr("box_number"))
		//})
		//$('input[name="subject_id"]').change(function() {
		//	updateBookForm(false, $(this),$(this).attr("box_number"))
		//})
		
		$(document).on("change", 'select.stock_select', function() {			
			//updateVolumnForm($(this))
			updateStockPriceForm($(this))
		})
		
		calculateStockPriceForm()
		$(document).on("change", ".stock_box input, .stock_box select", function(e) {
			calculateStockPriceForm()
		});
		$(document).on("keyup", ".stock_box input", function(e) {
			calculateStockPriceForm()
		});
		$('input[name="course_register[discount_program_id]"], input[name="course_register[discount]"], input[name="course_register[transfer]"]').change(function() {
			updateTotalRegsitrationPrice()
		})
		$('input[name="course_register[discount]"], input[name="course_register[transfer]"]').keyup(function() {
			updateTotalRegsitrationPrice()
		})
		
		
		$(document).on("change", "input[name=courses]", function(e) {
			var course_id = $(this).val()
			var box = $(".courses_phrases_select")
			if (course_id == "") {
				box.html("")
				return
			}

			$.ajax({
				url : "<%= courses_phrases_select_courses_phrases_path %>?course_id="+course_id,
				type: "GET",
				success:function(data, textStatus, jqXHR)
				{
					box.html(data)
					box.find(".modern_select").select2()
				}
			});
		});
		
		$(document).on("click", "#new_activity .submit", function(e) {
			e.preventDefault()
			
			if (!$("#new_activity").valid()) {
				return
			}
			
			$( "#new_activity" ).addClass("loading")
			
			var data = $( "#new_activity" ).serialize();
			var url = $( "#new_activity" ).attr("action");
			
			$.ajax({
				url : url,
				type: "POST",
				data: data,
				success:function(data, textStatus, jqXHR)
				{
					$( "#new_activity textarea" ).val("")
					$( "#new_activity" ).removeClass("loading")
					$('.datatable-activities').dataTable().fnFilter();
				}
			});
		});
		
		$(document).on("click", ".activity_destroy", function(e) {
			e.preventDefault()
			
			var url = $(this).attr("href")
			
			if(confirm("Are you sure!")) {
				$.ajax({
					url : url,
					type: "DELETE",
					success:function(data, textStatus, jqXHR)
					{
						$('.datatable-activities').dataTable().fnFilter();
					}
				});
			}
		});
		
		$(document).on("change", ".delivered_count", function() {
			var value = $(this).val()
			var remain_box = $(this).parents(".delivery_line_item").find(".to-be-delivered")
			var stock_box = $(this).parents(".delivery_line_item").find(".stock")
			var remain = parseInt(remain_box.attr("rel"))
			var stock = parseInt(stock_box.attr("rel"))
			
			remain_box.html(remain - value)
			stock_box.html(stock - value)
		})
		
		$(document).on("keyup", ".transer_amount input", function() {
			var price = 0
			var fee = 0
	
			if($('input[name="transfer[money]"]').val() != "") {
			  price = parseFloat($('input[name="transfer[money]"]').val().replace(/,/g,""))
			}
			if($('input[name="transfer[admin_fee]"]').val() != "") {
			  fee = parseFloat($('input[name="transfer[admin_fee]"]').val().replace(/,/g,""))
			}
			
			total = price - fee
			
			$(".transfer_total").html(ReplaceNumberWithDots(total.toFixed(0)))
		})
		
		$(".payment_box .detail_paid,.payment_box .detail_total").keyup(function() {
			updatePaymentRecordDetails($(this))
		});
		$(".payment_box .detail_paid,.payment_box .detail_total").change(function() {
			updatePaymentRecordDetails($(this))
		});
		$(".payment_box .detail_paid,.payment_box .detail_total").click(function() {
			updatePaymentRecordDetails($(this))
		});
		
		$(document).on("click", ".report_toggle", function() {
			var id = $(this).attr("rel")
			var box = $(this).parent()
			$.ajax({
				url : '<%= report_toggle_contacts_courses_path %>?id='+id,
				success:function(data, textStatus, jqXHR)
				{
					box.html(data)
				}
			});
		})		
		
		$("input[name='program_paper']").change(function() {
			renderPhraseSelect("", $(this).select2("val"))			
		})
		
		$(document).on("keyup", ".phrase_hour", function() {
			calculatePhraseHour()
		});
		
		$(document).on("click", ".phrase_title", function() {
			$("."+$(this).attr("rel")).toggle()
		});
		
		checkCourseUpfront()
		$("input[name='course[upfront]']").change(function() {
			checkCourseUpfront()
		})
		
		checkCourseRegisterSponsoredCompany()
		$("select[name='course_register[payment_type]']").change(function() {
			checkCourseRegisterSponsoredCompany()
		})
		
		$(".stock_form_filter input, .stock_form_filter select").change(function() {
			updateStockFormList($(".stock_form_filter select[name='stock_type_id']").select2("val"),$(".stock_form_filter input[name='program_id']").val(),$(".stock_form_filter input[name='subject_id']").val())
		})
		
		$(".import_export_form_filter input, .import_export_form_filter select").change(function() {
			updateImportExportList($(".import_export_form_filter select[name='stock_type_id']").select2("val"),$(".import_export_form_filter input[name='program_id']").val(),$(".import_export_form_filter input[name='subject_id']").val())
		})
		
		$(document).on("change", ".phrase_box .price_course", function() {
			noPriceCheck($(this))
		});
		
		$(document).on("change", ".stock_box .price_stock", function() {
			noPriceCheck($(this))
		});
		
		$(document).on("change", ".company_payment_form input[name='']", function() {
			noPriceCheck($(this))
		});
		
		$(".company_payment_form input").change(function() {
			calculateCompanyPayment()
		});
		$(".company_payment_form input").keyup(function() {
			calculateCompanyPayment()
		});
		
		
		$(document).on("change", ".transfer_course_from .course_select", function() {
			ajaxCoursePhrasesList($(this))
		});
		$(document).on("change", ".transfer_course_from .from_course", function() {
			ajaxTransferToBox($(this).select2("val"))
		});
		if($(".transfer_course_from").length) {
			$(".transfer_course_from .from_course").trigger("change")
		}
		
		updatePhraseListBoxHour()
		$(document).on("change", ".courses_phrase_item", function() {
			updatePhraseListBoxHour()
		});
		
		transferToTypeCheck()
		$(document).on("change", "select[name='transfer[to_type]']", function() {
			transferToTypeCheck()
		});
		
		$(document).on("change", "input[name='transfer[to_contact_id]']", function() {
			$("select[name='transfer[course_id]']").trigger("change")
			
		});

		$(document).on("keyup", ".transfer_payment_form .payment-record-paid", function() {
			calculateTransferPayForm()
		});
		$(document).on("change", ".transfer_payment_form .payment-record-paid", function() {
			calculateTransferPayForm()
		});
		
		//Seminar check import
		$(".seminar_group input[type=checkbox]").change(function(){
			var group = $(this).attr("group")
			if($(this).attr("checked") == "checked") {
			  $(".seminar_group_"+group).removeClass("row_selected")
			  $(".seminar_group_"+group+" input[type=checkbox]").attr("checked",false)
			  $(this).attr("checked",true)
			}
		})
		
		$(document).on("keyup", ".input_budget_hour", function() {
			calculateTransferHourFrom()
		});
		$(document).on("change", ".input_budget_hour", function() {
			calculateTransferHourFrom()
		});
	})
	

</script>